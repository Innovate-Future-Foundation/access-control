name: Terraform Plan
on:
  pull_request:
    paths:
      - '**.tf'
      - '**.tfvars'
      - '.github/workflows/terraform-plan.yml'

permissions:
  id-token: write # This is required for requesting the JWT (OIDC)
  contents: read
  pull-requests: write

jobs:
  terraform_plan:
    runs-on: ubuntu-22.04
    # Specify trigger condition
    if: github.event.pull_request.state != 'approved'
    steps:
      - id: checkout_latest
        name: Checkout latest
        uses: actions/checkout@v4

      - id: checkout_common_action
        name: Checkout latest
        uses: actions/checkout@v4
        with:
          repository: Innovate-Future-Foundation/terraform-bootstrap
          path: common

      - id: tf_prep
        name: Terraform setup using oidc role
        uses: ./common/actions/setup_with_oidc
        env:
          terraform_version: "1.10.2"
          terraform_dir: "./"
          aws_tfstate_key: "state/terraform-state"
        with:
          terraform_dir: ${{ env.terraform_dir }}
          terraform_version: ${{ env.terraform_version }}
          aws_region: ${{ secrets.TF_BACKEND_REGION }}
          aws_role_arn: ${{ secrets.WF_ROLE_ARN }}
          aws_tfstate_bucket: ${{ secrets.TF_BACKEND_BUCKET }}
          aws_tfstate_key: ${{ env.aws_tfstate_key }}
          aws_tflock_table: ${{ secrets.TF_BACKEND_TABLE }}
      
      - id: get_identity
        name: Get and check current identity
        run: |
          arn=$(aws sts get-caller-identity --query 'Arn' --output text)
          echo "identity=$(echo $arn | cut -d ':' -f 6)" >> $GITHUB_OUTPUT

      - id: tf_plan
        name: Terraform Plan
        run: terraform plan -out .planfile
        env:
          TF_VAR_create_by: ${{ steps.get_identity.outputs.identity }}
          TF_VAR_uat_account: ${{ secrets.ACCOUNT_UAT }}
          TF_VAR_prod_account: ${{ secrets.ACCOUNT_PROD }}

      - id: post_comment
        name: Post Terraform Plan to PR
        uses: borchero/terraform-plan-comment@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          planfile: .planfile
      
      - name: Upload Plan to S3
        run: |
          aws s3 cp .planfile s3://${{ secrets.WF_ARTIFACT_BUCKET }}/plans/plan-pr_${{ github.event.pull_request.number }}
          echo "Plan uploaded to S3"